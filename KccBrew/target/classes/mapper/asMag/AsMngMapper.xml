<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kccbrew.asMng.dao.IAsMngRepository">

<select id="selectASList" parameterType="java.util.Map" resultType="kr.co.kccbrew.asMng.model.AsMngVo">
SELECT as_info_seq AS "asInfoSeq",
        	store_nm AS "storeNm",
        	store_addr AS "storeAddr",
    		reg_dttm AS "regDttm",
            as_status_nm AS "asStatusNm",
            as_status_cd AS "asStatusCd",
            machine_cd_nm AS "machineCdNm",
            machine_cd AS "machineCd"
FROM (SELECT as_info_seq ,s.store_nm, s.store_addr, a.reg_dttm , status.as_status_nm,status.as_status_cd,machine.machine_cd_nm,machine.machine_cd
		 FROM as_information a 
		INNER JOIN store_user_map su ON a.store_mng_id=su.user_id
		INNER JOIN users u ON su.user_id=u.user_id 
		INNER JOIN store s ON s.store_seq=su.store_seq
		INNER JOIN (select grp_cd_dtl_nm AS as_status_nm ,grp_cd_dtl_id AS as_status_cd from group_code_detail where grp_cd_id LIKE 'S') status ON status.as_status_cd=a.as_status
		INNER JOIN (select grp_cd_dtl_nm AS machine_cd_nm ,grp_cd_dtl_id as machine_cd from group_code_detail where grp_cd_id like 'M') machine on machine.machine_cd=a.machine_cd
		WHERE s.store_nm LIKE '%'||#{asVo.storeNm}||'%' AND
			status.as_status_cd LIKE '%'||#{asVo.asStatusCd}||'%' AND
	 		machine.machine_cd LIKE '%'||#{asVo.machineCd}||'%' AND 
	 		s.store_addr LIKE '%'||#{asVo.storeAddr}||'%' 
 		<if test="asVo.asInfoSeq != ''">AND a.as_info_seq = #{asVo.asInfoSeq} </if>
		<choose>
			<when test="asVo.startYr != ''">
				<![CDATA[
					AND EXTRACT(YEAR FROM a.mod_dttm) >= #{asVo.startYr}
				]]>
			</when>
			<otherwise>
				<![CDATA[
					AND EXTRACT(YEAR FROM a.mod_dttm) >= TO_CHAR(SYSDATE-(INTERVAL '10' YEAR),'YYYY')
				]]>
			</otherwise>
		</choose>
		<if test="asVo.startMn != ''">
			<![CDATA[
				AND EXTRACT(MONTH FROM a.mod_dttm) >= #{asVo.startMn}
			]]>
		</if>
		<if test="asVo.endYr != ''">
			<![CDATA[
				AND EXTRACT(YEAR FROM a.mod_dttm) <= #{asVo.endYr}
			]]>
		</if>
		<if test="asVo.endMn != ''">
			<![CDATA[
				AND EXTRACT(MONTH FROM a.mod_dttm) <= #{asVo.endMn}
			]]>
		</if>
		<if test="userTypeCd=='02'">
			AND a.store_mng_id=#{userId}
		</if>
		ORDER BY a.as_info_seq DESC
		)
WHERE ROWNUM BETWEEN #{start} AND #{end}
</select>

<select id="countASList" parameterType="kr.co.kccbrew.asMng.model.AsMngVo" resultType="Integer">
	SELECT COUNT(*)
	FROM as_information a 
	INNER JOIN store_user_map su ON a.store_mng_id=su.user_id
	INNER JOIN users u ON su.user_id=u.user_id 
	INNER JOIN store s ON s.store_seq=su.store_seq
	INNER JOIN (select grp_cd_dtl_nm AS as_status_nm ,grp_cd_dtl_id AS as_status_cd from group_code_detail where grp_cd_id LIKE 'S') status ON status.as_status_cd=a.as_status
	INNER JOIN (select grp_cd_dtl_nm AS machine_cd_nm ,grp_cd_dtl_id as machine_cd from group_code_detail where grp_cd_id like 'M') machine on machine.machine_cd=a.machine_cd
		WHERE s.store_nm LIKE '%'||#{storeNm}||'%' AND
		status.as_status_cd LIKE '%'||#{asStatusCd}||'%' AND
	 	machine.machine_cd LIKE '%'||#{machineCd}||'%' AND 
	 	s.store_addr LIKE '%'||#{storeAddr}||'%'
		<choose><when test="asInfoSeq != ''">AND a.as_info_seq = #{asInfoSeq} </when></choose>
		<choose>
			<when test="startYr != ''">
				<![CDATA[
					AND EXTRACT(YEAR FROM a.mod_dttm) >= #{startYr}
				]]>
			</when>
			<otherwise>
				<![CDATA[
					AND EXTRACT(YEAR FROM a.mod_dttm) >= TO_CHAR(SYSDATE-(INTERVAL '10' YEAR),'YYYY')
				]]>
			</otherwise>
		</choose>
		<choose>
			<when test="startMn != ''">
				
				<![CDATA[
					AND EXTRACT(MONTH FROM a.mod_dttm) >= #{startMn}
				]]>
			</when>
		</choose>
		<choose>
			<when test="endYr != ''">
				<![CDATA[
					AND EXTRACT(YEAR FROM a.mod_dttm) <= #{endYr}
				]]>
			</when>
		</choose>
		<choose>
			<when test="endMn != ''">
				<![CDATA[
					AND EXTRACT(MONTH FROM a.mod_dttm) <= #{endMn}
				]]>
			</when>
		</choose>
</select>

<select id="selectMachineCd" resultType="kr.co.kccbrew.asMng.model.AsMngVo">
<![CDATA[
	SELECT grp_cd_dtl_id AS "grpCdDtlId", grp_cd_id AS "grpCdId", grp_cd_dtl_nm AS "grpCdDtlNm" 
	FROM group_code_detail WHERE grp_cd_id LIKE 'M'
]]>
</select>

<select id="selectAsStatusCd" resultType="kr.co.kccbrew.asMng.model.AsMngVo">
<![CDATA[
	SELECT grp_cd_dtl_id AS "grpCdDtlId", grp_cd_id AS "grpCdId", grp_cd_dtl_nm AS "grpCdDtlNm" 
	FROM group_code_detail WHERE grp_cd_id LIKE 'S'
]]>
</select>

<select id="selectLocationCd" resultType="kr.co.kccbrew.asMng.model.AsMngVo">
<![CDATA[
	SELECT grp_cd_dtl_id AS "grpCdDtlId", grp_cd_id AS "grpCdId", grp_cd_dtl_nm AS "grpCdDtlNm" 
	FROM group_code_detail WHERE grp_cd_id LIKE 'LL'
]]>
</select>

<select id="selectStrInfo" parameterType="hashmap" resultType="kr.co.kccbrew.asMng.model.AsMngVo">
<![CDATA[
	SELECT s.store_nm "storeNm",
			s.store_addr "storeAddr",
			s.latitude "latitude",
			s.longitude "longitude",
			s.store_telno "storeTelNo",
			s.store_addr_dtl "storeAddrDtl"
 	FROM store s
	JOIN store_user_map su ON s.store_seq=su.store_seq
	WHERE su.user_id=#{userId}
]]>
</select>

<insert id="insertFile" parameterType="kr.co.kccbrew.asMng.model.AsMngVo">
	INSERT INTO file_info VALUES(file_seq.NEXTVAL,'02',SYSDATE,#{userId},SYSDATE,#{userId})
	<selectKey resultType="int" keyProperty="fileSeq" order="AFTER">
			SELECT NVL(MAX(file_seq), 0) AS "fileSeq" FROM file_info
	</selectKey>
</insert>

<insert id="insertFileDtl" parameterType="kr.co.kccbrew.asMng.model.AsMngVo">
<![CDATA[
	INSERT INTO file_detail_info VALUES(
			file_dtl_seq.NEXTVAL,
			#{fileSeq},
			#{fileOriginalNm},
			#{storageLocation},
			SYSDATE,
			#{userId},
			SYSDATE,
			#{fileServerNm},
			#{fileFmt},
			#{userId})
]]>
</insert>

<insert id="insertAs" parameterType="kr.co.kccbrew.asMng.model.AsMngVo">
	INSERT INTO as_information VALUES(
		as_info_seq.NEXTVAL,
		#{wishingStartDate},
		#{wishingEndDate},
		#{asContent},
		#{machineCd},
		'01',
		#{fileSeq},
		#{userId},
		#{userId},
		SYSDATE,
		SYSDATE)
</insert>
</mapper>