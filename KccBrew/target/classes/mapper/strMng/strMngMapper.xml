<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kccbrew.strMng.dao.IStrMngRepository">

	<select id="storeAll"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
		<![CDATA[
        select 
        	a.store_nm			AS	"storeNm", 
        	b.grp_cd_dtl_nm		AS	"locationNm",
        	a.store_telno		AS	"storeTelNo",
        	a.store_seq			AS	"storeSeq"
		from 
			store a, 
			group_code_detail b
		where 
			(b.grp_cd_id='L'
			OR
			b.grp_cd_id='LL')
		and	
			a.location_cd = b.grp_cd_dtl_id
		order by 
			store_seq
        ]]>
	</select>
	
	<select id="strFilter" resultType="kr.co.kccbrew.strMng.model.StrMngVo" parameterType="java.util.Map">
    SELECT 
        a.store_nm AS "storeNm", 
        a.grp_cd_dtl_nm AS "locationNm",
        a.store_telno AS "storeTelNo",
        a.store_seq AS "storeSeq"
    FROM (
        SELECT
            ROW_NUMBER() OVER(ORDER BY a.store_seq) AS ROW_NUM,
            a.store_nm,
            b.grp_cd_dtl_nm, a.store_telno,  a.store_seq
        FROM store a
        JOIN group_code_detail b ON a.location_cd = b.grp_cd_dtl_id
        WHERE
            (b.grp_cd_id='L' OR b.grp_cd_id='LL')
            <if test="StrMngVo.startYr != null and StrMngVo.startYr != '' and StrMngVo.startMn != null and StrMngVo.startMn != ''">
                 <![CDATA[
                  AND (
                    EXTRACT(YEAR FROM a.REG_DTTM) > #{StrMngVo.startYr}
                    OR (EXTRACT(YEAR FROM a.REG_DTTM) = #{StrMngVo.startYr} AND EXTRACT(MONTH FROM a.REG_DTTM) >= #{StrMngVo.startMn})
                )
                  ]]>
            </if>
            <if test="StrMngVo.endYr != null and StrMngVo.endYr != '' and StrMngVo.endMn != null and StrMngVo.endMn != ''">
                  <![CDATA[
                AND (
                    EXTRACT(YEAR FROM a.REG_DTTM) < #{StrMngVo.endYr}
                    OR (EXTRACT(YEAR FROM a.REG_DTTM) = #{StrMngVo.endYr} AND EXTRACT(MONTH FROM a.REG_DTTM) <= #{StrMngVo.endMn})
                )
                  ]]>
            </if>
           
            <if test="StrMngVo.regUser != null and StrMngVo.regUser != ''">
                AND a.REG_USER = #{StrMngVo.regUser}
            </if>
            <if test="StrMngVo.keyword != null and StrMngVo.keyword != ''">
                AND a.store_nm LIKE '%' || #{StrMngVo.keyword} || '%'
            </if>
			<if test="StrMngVo.locationCdSeoul != null and StrMngVo.locationCdSeoul != ''">
			AND a.location_cd = #{StrMngVo.locationCdSeoul}
			</if>
			 <if test="StrMngVo.locationCd != '02'.toString() and StrMngVo.locationCd != null and StrMngVo.locationCd != '' and StrMngVo.locationCd != '02'.toString()">
                AND a.location_cd = #{StrMngVo.locationCd}
            </if>
            <if  test="StrMngVo.locationCd == '02'.toString() and StrMngVo.locationCdSeoul == '' ">
            <![CDATA[
            And a.location_cd LIKE '02-%'
            ]]>
            </if>
            <if test="StrMngVo.useYn != null and StrMngVo.useYn != ''">
                AND a.use_yn = #{StrMngVo.useYn}
            </if>
            
    ) a
    WHERE ROW_NUM BETWEEN #{firstRowNum} AND #{lastRowNum}
</select>





	<!-- 검색된 로그 개수 조회 -->
	<select id="getStrFilterCount"
		parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM (
		SELECT
		ROW_NUMBER() OVER(ORDER BY STORE_SEQ) AS
		ROW_NUM, a.store_nm			AS	"storeNm", 
        	b.grp_cd_dtl_nm		AS	"locationNm",
        	a.store_telno		AS	"storeTelNo",
        	a.store_seq			AS	"storeSeq"
		FROM store a
        JOIN group_code_detail b ON a.location_cd = b.grp_cd_dtl_id
		where 
			(b.grp_cd_id='L'
			OR
			b.grp_cd_id='LL')
		<!-- 검색 조건 -->
            <if test="StrMngVo.startYr != null and StrMngVo.startYr != '' and StrMngVo.startMn != null and StrMngVo.startMn != ''">
                 <![CDATA[
                  AND (
                    EXTRACT(YEAR FROM a.REG_DTTM) > #{StrMngVo.startYr}
                    OR (EXTRACT(YEAR FROM a.REG_DTTM) = #{StrMngVo.startYr} AND EXTRACT(MONTH FROM a.REG_DTTM) >= #{StrMngVo.startMn})
                )
                  ]]>
            </if>
            <if test="StrMngVo.endYr != null and StrMngVo.endYr != '' and StrMngVo.endMn != null and StrMngVo.endMn != ''">
                  <![CDATA[
                AND (
                    EXTRACT(YEAR FROM a.REG_DTTM) < #{StrMngVo.endYr}
                    OR (EXTRACT(YEAR FROM a.REG_DTTM) = #{StrMngVo.endYr} AND EXTRACT(MONTH FROM a.REG_DTTM) <= #{StrMngVo.endMn})
                )
                  ]]>
            </if>
           
            <if test="StrMngVo.regUser != null and StrMngVo.regUser != ''">
                AND a.REG_USER = #{StrMngVo.regUser}
            </if>
            <if test="StrMngVo.keyword != null and StrMngVo.keyword != ''">
                AND a.store_nm LIKE '%' || #{StrMngVo.keyword} || '%'
            </if>
			<if test="StrMngVo.locationCdSeoul != null and StrMngVo.locationCdSeoul != ''">
			AND a.location_cd = #{StrMngVo.locationCdSeoul}
			</if>
			 <if test="StrMngVo.locationCd != null and StrMngVo.locationCd != '' and StrMngVo.locationCd != '02'.toString()">
                AND a.location_cd = #{StrMngVo.locationCd}
            </if>
            <if  test="StrMngVo.locationCd == '02'.toString() and StrMngVo.locationCdSeoul == '' ">
            <![CDATA[
            And a.location_cd LIKE '02-%'
            ]]>
            </if>
            <if test="StrMngVo.useYn != null and StrMngVo.useYn != ''">
                AND a.use_yn = #{StrMngVo.useYn}
            </if>
		) 
	</select>
	
	<select id="search" parameterType="hashmap"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
	<![CDATA[
		SELECT 
			a.store_nm			AS	"storeNm", 
        	b.grp_cd_dtl_nm		AS	"locationNm",
        	a.store_telno		AS	"storeTelNo",
        	a.store_seq			AS	"storeSeq"
	 from 
			store a, 
			group_code_detail b
	    WHERE
	    		(b.grp_cd_id='L'
			OR
			b.grp_cd_id='LL')
		and	
			a.location_cd = b.grp_cd_dtl_id
	    		AND
	    		a.store_nm LIKE '%'||#{keyword}||'%'
	    		
		order by 
			store_seq
			]]>
	</select>

	<select id="storeDetail" parameterType="int"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
	<![CDATA[
        select
        	a.store_seq 		AS  "storeSeq",
        	a.store_nm			AS	"storeNm", 
        	a.location_cd			AS	"locationCd", 
        	b.grp_cd_dtl_nm		AS	"locationNm",
        	a.store_telno		AS	"storeTelNo",
        	a.store_addr 		AS 	"storeAddr",
        	a.latitude			AS	"latitude",
			a.longitude			AS	"longitude",
			a.store_addr_dtl	AS 	"storeAddrDtl",
			a.use_yn	AS 	"useYn"
			from 
			store a, 
			group_code_detail b
		where 
			a.store_seq = #{storeSeq}
		and
			(b.grp_cd_id='L'
			OR
			b.grp_cd_id='LL')
		and	
			a.location_cd = b.grp_cd_dtl_id
        ]]>
	</select>

	<select id="ownerList" parameterType="int"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
		<![CDATA[
        select 
        	b.user_nm			AS	"userNm",
        	b.user_telno		AS	"userTelNo"
		from 
			store_user_map a, 
			users b
		where 
			a.user_id = b.user_id
		and
			a.store_seq = #{storeSeq}
		order by 
			b.reg_dttm
        ]]>
	</select>

	<insert id="insert"
		parameterType="kr.co.kccbrew.strMng.model.StrMngVo">

		INSERT INTO STORE
		(store_seq, store_nm, store_addr, store_addr_dtl,
		latitude, longitude,
		store_telno, location_cd, reg_dttm, reg_user,
		MOD_DTTM, MOD_USER,
		USE_YN)
		<choose>
			<when test='locationCdSeoul != null'>
				VALUES
				(store_seq.nextval, #{storeNm}, #{storeAddr}, #{storeAddrDtl}, #{latitude},
				#{longitude}, #{storeTelNo}, #{locationCdSeoul}, SYSDATE,
				#{regUser},
				SYSDATE, #{modUser}, 'Y')
			</when>
			<when test='locationCdSeoul == null'>
				VALUES
				(store_seq.nextval, #{storeNm}, #{storeAddr}, #{storeAddrDtl}, #{latitude},
				#{longitude}, #{storeTelNo}, #{locationCd}, SYSDATE, #{regUser},
				SYSDATE, #{modUser}, 'Y')
			</when>

		</choose>
	</insert>

	<select id="locationNm"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
		<![CDATA[
        select 
        	grp_cd_dtl_id			AS "locationCd",
        	grp_cd_dtl_nm			AS "locationNm"
        from
        	group_code_detail
        where
        	grp_cd_id='L'
        ]]>
	</select>

	<select id="locationNmSeoul"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
		<![CDATA[
        select 
        	grp_cd_dtl_id			AS "locationCd",
        	grp_cd_dtl_nm			AS "locationNm"
        from
        	group_code_detail
        where
			grp_cd_id='LL'
        ]]>
	</select>

	<update id="update"
		parameterType="kr.co.kccbrew.strMng.model.StrMngVo">
		UPDATE
		store
		SET
		store_nm = #{storeNm},
		store_addr = #{storeAddr},
		store_addr_dtl = #{storeAddrDtl},
		latitude = #{latitude},
		longitude = #{longitude},
		store_telno = #{storeTelNo},
		<if test="locationCdSeoul != null ">
			location_cd = #{locationCdSeoul}
		</if>
		<if test="locationCdSeoul == null and locationCd != '02'.toString()">
			location_cd = #{locationCd}
		</if>
		,
		MOD_DTTM = SYSDATE,
		MOD_USER = #{modUser},
		use_yn=#{useYn}
		WHERE
		store_seq=#{storeSeq}

	</update>

	<select id="selectStoreByName" parameterType="string"
		resultType="kr.co.kccbrew.strMng.model.StrMngVo">
        <![CDATA[
        SELECT 
            store_seq AS "storeSeq"
        FROM
            STORE
        WHERE store_nm = #{storeNm}
        ]]>
	</select>
</mapper>